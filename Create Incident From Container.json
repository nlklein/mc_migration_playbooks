{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "description": "The purpose of this playbook is to ingest on poll SOAR containers into MC as incidents. The SOAR container artifacts are then saved to the MC incident as events.",
            "edges": [
                {
                    "id": "port_11_to_port_10",
                    "sourceNode": "11",
                    "sourcePort": "11_out",
                    "targetNode": "10",
                    "targetPort": "10_in"
                },
                {
                    "id": "port_10_to_port_1",
                    "sourceNode": "10",
                    "sourcePort": "10_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_0_to_port_2",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "2",
                    "targetPort": "2_in"
                },
                {
                    "id": "port_2_to_port_9",
                    "sourceNode": "2",
                    "sourcePort": "2_out",
                    "targetNode": "9",
                    "targetPort": "9_in"
                },
                {
                    "id": "port_9_to_port_12",
                    "sourceNode": "9",
                    "sourcePort": "9_out",
                    "targetNode": "12",
                    "targetPort": "12_in"
                },
                {
                    "id": "port_12_to_port_13",
                    "sourceNode": "12",
                    "sourcePort": "12_out",
                    "targetNode": "13",
                    "targetPort": "13_in"
                },
                {
                    "id": "port_13_to_port_14",
                    "sourceNode": "13",
                    "sourcePort": "13_out",
                    "targetNode": "14",
                    "targetPort": "14_in"
                },
                {
                    "id": "port_14_to_port_11",
                    "sourceNode": "14",
                    "sourcePort": "14_out",
                    "targetNode": "11",
                    "targetPort": "11_in"
                }
            ],
            "hash": "547ffbc97f2d8b9177ea11c52b5d271715efd002",
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {},
                    "id": "0",
                    "type": "start",
                    "warnings": {},
                    "x": 1000,
                    "y": 279.9999999999993
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "warnings": {},
                    "x": 1000,
                    "y": 1380
                },
                "10": {
                    "data": {
                        "advanced": {
                            "customName": "Close Container",
                            "customNameId": 0,
                            "description": "Close current container. A new container will automatically be created and linked to the new MC incident.",
                            "join": [],
                            "note": "Close current container. A new container will automatically be created and linked to the new MC incident.",
                            "refreshNotableData": true
                        },
                        "functionId": 2,
                        "functionName": "close_container",
                        "id": "10",
                        "selectMore": false,
                        "tab": "apis",
                        "type": "utility",
                        "utilities": {
                            "set_status": {
                                "description": "",
                                "fields": [
                                    {
                                        "choices": "notableStatus",
                                        "description": "",
                                        "label": "status",
                                        "name": "status",
                                        "placeholder": "Select status",
                                        "renderType": "dropdown",
                                        "required": true
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "set status",
                                "name": "set_status",
                                "refreshNotableData": true
                            }
                        },
                        "utilityType": "api",
                        "values": {
                            "set_status": {
                                "_internal": [
                                    "container",
                                    "trace"
                                ],
                                "status": "closed"
                            }
                        }
                    },
                    "errors": {},
                    "id": "10",
                    "type": "utility",
                    "warnings": {},
                    "x": 980,
                    "y": 1240
                },
                "11": {
                    "data": {
                        "advanced": {
                            "customName": "Add Comment",
                            "customNameId": 0,
                            "description": "On-poll container successfully moved to Mission Control. Closing container.",
                            "join": [],
                            "note": "On-poll container successfully moved to Mission Control. Closing container."
                        },
                        "functionId": 3,
                        "functionName": "add_comment",
                        "id": "11",
                        "selectMore": false,
                        "tab": "apis",
                        "type": "utility",
                        "utilities": {
                            "comment": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "comment",
                                        "name": "comment",
                                        "placeholder": "Enter a comment",
                                        "renderType": "datapath",
                                        "required": true
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add comment",
                                "name": "comment"
                            }
                        },
                        "utilityType": "api",
                        "values": {
                            "comment": {
                                "_internal": [
                                    "container",
                                    "author",
                                    "trace"
                                ],
                                "comment": "On-poll container successfully moved to Mission Control. Closing container."
                            }
                        }
                    },
                    "errors": {},
                    "id": "11",
                    "type": "utility",
                    "warnings": {},
                    "x": 980,
                    "y": 1100
                },
                "12": {
                    "data": {
                        "advanced": {
                            "customName": "Iterate All Artifacts",
                            "customNameId": 0,
                            "description": "Iterate all artifacts in the current container and create JSON body for the POST request.",
                            "join": [],
                            "note": "Iterate all artifacts in the current container and create JSON body for the POST request."
                        },
                        "functionId": 1,
                        "functionName": "iterate_all_artifacts",
                        "id": "12",
                        "inputParameters": [
                            "artifact:*.cef",
                            "create_incident:action_result.data.*.id"
                        ],
                        "outputVariables": [
                            "http_body"
                        ],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "12",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    \n    # DECLARE EVENT LIST\n    iterate_all_artifacts__http_body = []\n    \n    # ITERATE ARTIFACTS IN CONTAINER\n    for artifact in container_artifact_data:\n        \n        # SAVE DICTIONARY TO REFERNCE IN FOR LOOP\n        dictionary = artifact[0]\n\n        # ITERATE CEF FIELDS\n        for field in artifact[0]:\n            \n            # RETRIEVE CEF VALUE\n            field_value = None\n            field_value = dictionary[field]\n            \n            # IF VALUE PRESENT, CONTINUE \n            if field_value:\n                phantom.error(field)\n                phantom.error(field_value)\n                \n                field_json = '{\"' + str(field) + '\":\"' + str(field_value) + '\"}'\n                iterate_all_artifacts__http_body.append(field_json)\n                \n            \n\n\n",
                    "warnings": {},
                    "x": 980,
                    "y": 680
                },
                "13": {
                    "data": {
                        "advanced": {
                            "customName": "Iterate HTTP Body",
                            "customNameId": 0,
                            "description": "Iterate all JSON requests.",
                            "join": [],
                            "note": "Iterate all JSON requests."
                        },
                        "functionId": 1,
                        "functionName": "iterate_http_body",
                        "id": "13",
                        "parameters": [
                            "iterate_all_artifacts:custom_function:http_body"
                        ],
                        "template": "%%\n{0}\n%%",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "13",
                    "type": "format",
                    "warnings": {},
                    "x": 980,
                    "y": 820
                },
                "14": {
                    "data": {
                        "action": "post data",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "Create MC Event",
                            "customNameId": 0,
                            "description": "Create MC events for each artifact.",
                            "join": [],
                            "note": "Create MC events for each artifact."
                        },
                        "connector": "HTTP",
                        "connectorConfigs": [
                            "local mission control"
                        ],
                        "connectorId": "290b7499-0374-4930-9cdc-5e9b05d65827",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "create_mc_event",
                        "id": "14",
                        "parameters": {
                            "body": "iterate_http_body:formatted_data.*",
                            "location": {
                                "functionId": 1,
                                "parameters": [
                                    "create_incident:action_result.data.*.id"
                                ],
                                "template": "v1/incidents/{0}/events\n"
                            }
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "location"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "14",
                    "type": "action",
                    "warnings": {},
                    "x": 980,
                    "y": 960
                },
                "2": {
                    "data": {
                        "action": "create incidents",
                        "actionType": "post",
                        "advanced": {
                            "customName": "Create Incident",
                            "customNameId": 0,
                            "description": "Create Mission Control incident for the new on poll container.",
                            "join": [],
                            "note": "Create Mission Control incident for the new on poll container."
                        },
                        "connector": "Mission Control",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 182,
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "create_incident",
                        "id": "2",
                        "parameters": {
                            "description": "This incident was created from SOAR on-poll demo.",
                            "incident_origin": "",
                            "incident_type": "soar_poll",
                            "name": {
                                "functionId": 1,
                                "parameters": [
                                    "container:name"
                                ],
                                "template": "SOAR Poll - {0}\n"
                            },
                            "status": "New"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "name"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "incident_type"
                            }
                        ],
                        "type": "missionControl"
                    },
                    "errors": {},
                    "id": "2",
                    "type": "missionControl",
                    "warnings": {},
                    "x": 980,
                    "y": 400
                },
                "9": {
                    "data": {
                        "advanced": {
                            "customName": "Save MC ID as Artifact",
                            "customNameId": 0,
                            "description": "Save the new MC incident ID to the container as an artifact.",
                            "join": [],
                            "note": "Save the new MC incident ID to the container as an artifact."
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "artifact_create",
                            "repoName": "community"
                        },
                        "functionId": 1,
                        "functionName": "save_mc_id_as_artifact",
                        "id": "9",
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "artifact_create": {
                                "description": "Create a new artifact with the specified attributes. Supports all fields available in /rest/artifact. Add any unlisted inputs as dictionary keys in input_json. Unsupported keys will automatically be dropped.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "phantom container id"
                                        ],
                                        "description": "Container which the artifact will be added to.",
                                        "inputType": "item",
                                        "label": "container",
                                        "name": "container",
                                        "placeholder": "container:id",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "The name of the new artifact, which is optional and defaults to \"artifact\".",
                                        "inputType": "item",
                                        "label": "name",
                                        "name": "name",
                                        "placeholder": "artifact",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "The label of the new artifact, which is optional and defaults to \"events\"",
                                        "inputType": "item",
                                        "label": "label",
                                        "name": "label",
                                        "placeholder": "events",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            ""
                                        ],
                                        "description": "The severity of the new artifact, which is optional and defaults to \"Medium\". Typically this is either \"High\", \"Medium\", or \"Low\".",
                                        "inputType": "item",
                                        "label": "severity",
                                        "name": "severity",
                                        "placeholder": "Medium",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "The name of the CEF field to populate in the artifact, such as \"destinationAddress\" or \"sourceDnsDomain\". Required only if cef_value is provided.",
                                        "inputType": "item",
                                        "label": "cef_field",
                                        "name": "cef_field",
                                        "placeholder": "destinationAddress",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "The value of the CEF field to populate in the artifact, such as the IP address, domain name, or file hash. Required only if cef_field is provided.",
                                        "inputType": "item",
                                        "label": "cef_value",
                                        "name": "cef_value",
                                        "placeholder": "192.0.2.192",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "The CEF data type of the data in cef_value. For example, this could be \"ip\", \"hash\", or \"domain\". Optional.",
                                        "inputType": "item",
                                        "label": "cef_data_type",
                                        "name": "cef_data_type",
                                        "placeholder": "ip",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "A comma-separated list of tags to apply to the created artifact, which is optional.",
                                        "inputType": "item",
                                        "label": "tags",
                                        "name": "tags",
                                        "placeholder": "tag1, tag2, tag3",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "Either \"true\" or \"false\", depending on whether or not the new artifact should trigger the execution of any playbooks that are set to active on the label of the container the artifact will be added to. Optional and defaults to \"false\".",
                                        "inputType": "item",
                                        "label": "run_automation",
                                        "name": "run_automation",
                                        "placeholder": "false",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "Optional parameter to modify any extra attributes of the artifact. Input_json will be merged with other inputs. In the event of a conflict, input_json will take precedence.",
                                        "inputType": "item",
                                        "label": "input_json",
                                        "name": "input_json",
                                        "placeholder": "{\"source_data_identifier\": \"1234\", \"data\": \"5678\"}",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "artifact_create",
                                "name": "artifact_create"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "artifact_create": {
                                "cef_data_type": "",
                                "cef_field": "mc_id",
                                "cef_value": "create_incident:action_result.data.*.id",
                                "container": "container:id",
                                "input_json": null,
                                "label": "info",
                                "name": "Created Mission ID",
                                "run_automation": "false",
                                "severity": "Informational",
                                "tags": null
                            }
                        }
                    },
                    "errors": {},
                    "id": "9",
                    "type": "utility",
                    "warnings": {},
                    "x": 980,
                    "y": 540
                }
            },
            "notes": "Prerequisites:\n-Provision an HTTP asset to create POST requests to Mission Control.\n-Create a new incident type in Mission Control for these incidents. In this example, we use \"soar_poll\"."
        },
        "input_spec": null,
        "output_spec": null,
        "playbook_type": "automation",
        "python_version": "3",
        "schema": "5.0.9",
        "version": "6.0.0.114895"
    },
    "create_time": "2023-05-23T02:14:41.339582+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ],
    "tags": []
}